"""
BOJ 1174 줄어드는 수
https://www.acmicpc.net/problem/1174

줄어드는 수: 가장 앞자리에서 부터 뒤자리로 넘어갈 수록 자리를 구성하는 수가 줄어드는 형태의 수
한 자리 수는 그 뒤의 숫자가 없으므로 줄어드는 수로 친다.
i.g.) 5431, 953, 21, 9, 0




N번째로 작은 줄어드는 수를 출력

10
20, 21
30, 31, 32
40, 41, 42, 43
...
90, 91, 92, 93, 94, 95, 96, 97, 98
210
310, 320, 321
410, 420, 421, 430, 431, 432
...

9876543210 (자연수로 만들 수 있는 줄어드는 수의 상한)

숫자를 정렬하고 N번쨰 순서의 수를 취해서 줄어드는 수라면 출력하고 아니면 -1을 출력한다.
1 부터 시작해서 각 자연수가 줄어드는 수인지 확인하여 N번 째 줄어드는 수를 확인하고 그 수를 출력한다.
만약 N번쨰 줄어드는 수를 찾기 전에 자연수 987654321을 초과하면 더이상 확인하지 않고 -1을 출력하면 된다.

숫자를 문자열 형태로 변경하여 1번쨰 인덱스 부터 마지막 인덱스 까지 s[i-1] > s[i]를 만족하는지 확인하여
만족하면 줄어드는 수이다.

9876543210이 줄어드는 수 중에 가장 큰 수이다.
이 수에 1 이상을 더하면 더이상 줄어드는 수가 아니게 된다.
9876543210 직전의 줄어드는 수는 987654321이 된다.
987654321 부터 내림차순으로 줄어드는 수를 확인해보자.
987654321
987654320
987654310
987654210
987653210
987643210
987543210
986543210
976543210
876543210
87654321
87654320
87654310
87654210
87653210
87643210
87543210
86543210
76543210
7654321
7654320
7654310
7654210
7653210
7643210
7543210
6543210
654321
654320
654310
654210
653210
643210
543210
...
321
320
310
210
21
20
------- 여기까지 ------
나머지 0 ~ 9까지를 리스트에 저장.

최대 줄어드는 수를 리스트에 저장.
최대 줄어드는 수에서 1의 자리를 제외한 수가 다음 줄어드는 수가 된다.

"""
# 시간초과 발생 코드
# N = int(input())
# d_num_cnt = 0   # decrease number count
# num = 10    # 1 ~ 9까지는 줄어드는 수가 없으므로 10부터 시작
# while True:
#     str_num = str(num)
#     is_d_num = True
#     for i in range(1, len(str_num)):
#         if str_num[i] >= str_num[i-1]:
#             is_d_num = False
#     if is_d_num:
#         print(num)
#         d_num_cnt += 1
#
#     if d_num_cnt == N:
#         print(num)
#         break
#     if num > 987654321:
#         print(-1)
#         break
#     num += 1

N = int(input())
"""
9 -> (0 ~ 8)
8 -> (0 ~ 7)
...
2 -> (0 ~ 1)
1 -> 0
가장 앞자리 숫자 크기 만큼의 경우의 수가 발생한다.
두자리 수일 때 1로 시작하면 10 밖에 없다.
2로 시작하면 20, 21
3으로 시작하면 30, 31, 32 와 같이 반복된다.

"""
