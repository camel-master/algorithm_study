"""
BOJ 2231 분해합
https://www.acmicpc.net/problem/2231

[0 ~ 9]
0: 0 + 0 = 0
1: 1 + 1 = 2
2: 2 + 2 + 4
...
7: 7 + 7 = 14
8: 8 + 8 = 16
9: 9 + 9 = 18

[10 ~ 19]
10: 10 + 1 + 0 = 11
11: 11 + 1 + 1 = 13
12: 12 + 1 + 2 = 15
...
17: 17 + 1 + 7 = 25
18: 18 + 1 + 8 = 27
19: 19 + 1 + 9 = 29

[20 ~ 29]
20: 20 + 2 + 0 = 22
21: 21 + 2 + 1 = 24
22: 22 + 2 + 2 = 26
...
27: 27 + 2 + 7 = 36
28: 28 + 2 + 8 = 38
29: 29 + 2 + 9 = 40

[300 ~ 309]
300: 300 + 3 + 0 + 0 = 303
301: 301 + 3 + 0 + 1 = 305
302: 302 + 3 + 0 + 2 = 307
...
307: 307 + 3 + 0 + 7 = 317
308: 308 + 3 + 0 + 8 = 319
309: 309 + 3 + 0 + 9 = 321

자연수 N의 분해합은 다음과 같이 구할 수 있다.
분해합 R은
R = 0
for n = 1, n <= len(N)
    R = R + int("1" + "0" * (자리수 - 2) + "1") * int(자리수에 해당하는 수)
R = R + int(1의 자리수에 해당하는 수) * 2
1부터 시작하여 원하는 분해합이 나올 때까지 선형으로 알고리즘을 실행해보자.

3421
1001 * 3 = 3003
101 * 4 = 404
3407

486
101 * 4 = 404
if len(num) > 1
    num[len(num) // 2] * int("1" + "0"*(len(num) - 2) + "1")
else:
    int(num) + int(num)

399 = 399 + 3 + 9 + 9 = 420
400 = 404
410 = 404 + 11 = 415 ~ 433
420 = 404 + 22 = 426 ~ 444
430 = 404 + 33 = 437 ~ 455
440 = 404 + 44 = 448 ~ 466
450 = 404 + 55 = 459 ~ 477
460 = 404 + 66 = 470 ~ 488
461 = 404 + 66 + 2 = 472
462 = 404 + 66 + 4 = 474
463 = 404 + 66 + 6 = 476
464 = 404 + 66 + 8 = 478
465 = 404 + 66 + 10 = 480
466 = 404 + 66 + 12 = 482
467 = 404 + 66 + 14 = 484
468 = 404 + 66 + 16 = 486
찾고자 하는 수가 짝수인지 홀수인지 확인하고
어디서 부터 시작할지 확인한다.
486
486 // 101 = 4

486 % 101 = 82
82 // 11 = 5

5 // 2 = 2


"""
# N = input()
# divisors = [1000001, 100001, 10001, 1001, 101, 11, 2]
# multiplier = [1000000, 100000, 10000, 1000, 100, 10, 1]
# int_N = int(N)
# res = 0
# if len(N) > 1:
#     for c in zip(divisors, multiplier):
#         if c[1] > 10:
#             res += int_N // c[0] * c[1]
#             int_N %= c[0]
#         elif c[1] == 10:
#             if int_N % 2 == 1:
#                 res += (int_N // c[0] - 1) * c[1]
#                 int_N = int_N // c[0] + c[0]
#             else:
#                 res += int_N // c[0] * c[1]
#                 int_N %= c[0]
#         else:
#             res += int_N // c[0] * c[1]
# else:
#     res = int_N * 2
#
# print(res)

"""
190 = 200
191 = 202

"""
N = int(input())
base = dict()
divisors = [2, 11, 101, 1001, 10001, 100001, 1000001]
for i in range(100000):
    str_n = str(i * 10)
    n_len = len(str_n)
    if n_len == 1:
        base[0] = 0
    else:
        rev_n = str_n[-1::-1]
        num = 0
        for ch in range(len(rev_n)):
            num += int(rev_n[ch]) * divisors[ch]
        base[i*10] = num

res = 0
for b in base.items():
    is_find = False
    if b[1] <= N <= b[1] + 18:
        for n in range(0, 10):
            if N == b[1] + 2 * n:
                res = b[0] + n
                is_find = True
                break
        if is_find:
            break

print(res)
